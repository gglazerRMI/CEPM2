import numpy as np
import cvxpy as cp
from scipy import optimize
import scipy as sp

"""Notation: # used for comments to keep in code, ## used to indicate notes to address, triple quotes used
for headings and longer descriptions."""


"""Functions"""

# norm_max takes an array and returns the array with all elements normalized by the element closest to +inf in the array
# norm_max returns the original matrix if the largest element is 0
# norm_max returns the original matrix normalized by element closest to +inf (meaning we lose the negatives)
def norm_max(M):
    if np.amax(M) == 0:
        return M
    else:
        return M/np.amax(M)

"""Inputs: Constants, Constraints, and Requirements"""

## Index key for x
idx_re_pv = 0
idx_re_pvt = 1
idx_re_w = 2
idx_es_4h = 3
idx_es_6h = 4
idx_ee_ind = 5
idx_ee_res1 = 6
idx_ee_res2 = 7
idx_ee_res3 = 8
idx_ee_res4 = 9
idx_ee_res5 = 10
idx_ee_com1 = 11
idx_ee_com2 = 12
idx_ee_com3 = 13
idx_ee_com4 = 14
idx_ee_com5 = 15
idx_ee_com6 = 16
idx_dr_ind = 17
idx_dr_res1 = 18
idx_dr_res2 = 19
idx_dr_res3 = 20
idx_dr_res4 = 21
idx_dr_res5 = 22
idx_dr_com1 = 23
idx_dr_com2 = 24
idx_dr_com3 = 25
idx_dr_com4 = 26
idx_dr_com5 = 27
idx_dr_com6 = 28

# Indexing for months
Jan = 0
Feb = Jan + 31*24
Mar = Feb + 28*24
Apr = Mar + 31*24
May = Apr + 30*24
Jun = May + 31*24
Jul = Jun + 30*24
Aug = Jul + 31*24
Sep = Aug + 31*24
Oct = Sep + 30*24
Nov = Oct + 31*24
Dec = Nov + 30*24
##

"""Minimize z = c'x, subject to Axâ‰¤b"""
r=1
## need to rewrite this so that A, b are appended from other A's and b's
x = cp.Variable(29)  # vector of 29 decision variables
c = np.ones((29,1))   # vector of 29 objective coefficients giving cost/MW
A = np.ones((r,29))   # array [rx29], where r=len(b), giving coefficients for system requirements
b = np.ones((r,1))    # vector of r coefficients for clean energy constraints
x0_bnds = (None, None)
x1_bnds = (-3,None)

# Output of this function is x, where each element represents the MW for each resource that should
# be built for a given year
objective = cp.Minimize(c.dot(x))





print('works')